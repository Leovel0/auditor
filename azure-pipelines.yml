# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- feature/*

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

steps:
- task: GitVersion@5
  inputs:
    runtime: 'core'
    configFilePath: 'gitversion.yml'

- task: Bash@3
  inputs:
    targetType: 'inline'
    displayName: 'Create version number'
    script:
      echo "##vso[task.setvariable variable=complete_version]$(GitVersion.NugetVersion).$(Build.BuildId)"
- task: NuGetToolInstaller@1
- task: NuGetCommand@2
  displayName: 'Restore packages'
  inputs:
    command: 'restore'
    restoreSolution: 'Src/*.sln'
    feedsToUse: 'config'
    nugetConfigPath: 'nuget.config'
    externalFeedCredentials: 'nuget con'
- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    command: 'build'
    projects: 'Src/**/*.csproj'
    arguments: '--configuration $(BuildConfiguration) /p:Version=$(COMPLETE_VERSION)'

- task: DotNetCoreCLI@2
  displayName: "Nuget Pack"
  inputs:
    command: 'pack'
    packagesToPack: 'Src/Auditor/*.csproj'
    versioningScheme: byEnvVar
    versionEnvVar: COMPLETE_VERSION

- task: DotNetCoreCLI@2
  displayName: Push Nuget Package
  inputs:
    command: custom
    custom: nuget
    arguments: >
      push $(Build.ArtifactStagingDirectory)/Src/*.nupkg
      -s $(NuGetSourceServerUrl)
      -k $(NuGetSourceServerApiKey)